2023-04-17 10:29:31,088 - distributed.nanny - INFO -         Start Nanny at: 'tcp://172.16.3.90:43355'
2023-04-17 10:29:42,245 - distributed.worker - INFO -       Start worker at:    tcp://172.16.3.90:35160
2023-04-17 10:29:42,245 - distributed.worker - INFO -          Listening to:    tcp://172.16.3.90:35160
2023-04-17 10:29:42,246 - distributed.worker - INFO -           Worker name:             SLURMCluster-1
2023-04-17 10:29:42,246 - distributed.worker - INFO -          dashboard at:          172.16.3.90:42546
2023-04-17 10:29:42,246 - distributed.worker - INFO - Waiting to connect to:   tcp://172.16.3.167:43338
2023-04-17 10:29:42,246 - distributed.worker - INFO - -------------------------------------------------
2023-04-17 10:29:42,246 - distributed.worker - INFO -               Threads:                         36
2023-04-17 10:29:42,246 - distributed.worker - INFO -                Memory:                 178.81 GiB
2023-04-17 10:29:42,246 - distributed.worker - INFO -       Local Directory: /tmp/dask-worker-space/worker-br4btiu8
2023-04-17 10:29:42,246 - distributed.worker - INFO - -------------------------------------------------
2023-04-17 10:29:42,302 - distributed.worker - INFO -         Registered to:   tcp://172.16.3.167:43338
2023-04-17 10:29:42,302 - distributed.worker - INFO - -------------------------------------------------
2023-04-17 10:29:42,302 - distributed.core - INFO - Starting established connection to tcp://172.16.3.167:43338
/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/xarray/core/common.py:965: FutureWarning: 'base' in .resample() and in Grouper() is deprecated.
The new arguments that you should use are 'offset' or 'origin'.

>>> df.resample(freq="3s", base=2)

becomes:

>>> df.resample(freq="3s", offset="2s")

  grouper = pd.Grouper(
2023-04-17 10:32:58,777 - distributed.utils_perf - INFO - full garbage collection released 2.37 GiB from 547 reference cycles (threshold: 9.54 MiB)
2023-04-17 10:34:02,621 - distributed.utils_perf - INFO - full garbage collection released 144.21 MiB from 664 reference cycles (threshold: 9.54 MiB)
2023-04-17 10:34:36,152 - distributed.utils_perf - INFO - full garbage collection released 270.99 MiB from 274 reference cycles (threshold: 9.54 MiB)
2023-04-17 10:34:55,502 - distributed.utils_perf - INFO - full garbage collection released 13.08 MiB from 301 reference cycles (threshold: 9.54 MiB)
2023-04-17 10:35:10,498 - distributed.core - INFO - Event loop was unresponsive in Worker for 7.51s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-04-17 10:58:37,262 - distributed.core - INFO - Connection to tcp://172.16.3.167:43338 has been closed.
2023-04-17 10:58:37,264 - distributed.worker - INFO - Stopping worker at tcp://172.16.3.90:35160. Reason: worker-handle-scheduler-connection-broken
2023-04-17 10:58:37,264 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/tornado/iostream.py", line 867, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/tornado/iostream.py", line 1140, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/worker.py", line 1215, in heartbeat
    response = await retry_operation(
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/utils_comm.py", line 386, in retry_operation
    return await retry(
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/utils_comm.py", line 371, in retry
    return await coro()
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/core.py", line 1163, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/core.py", line 928, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://172.16.3.90:55315 remote=tcp://172.16.3.167:43338>: ConnectionResetError: [Errno 104] Connection reset by peer
2023-04-17 10:58:37,270 - distributed.nanny - INFO - Closing Nanny gracefully at 'tcp://172.16.3.90:43355'. Reason: worker-handle-scheduler-connection-broken
2023-04-17 10:58:41,518 - distributed.client - ERROR - 
ConnectionRefusedError: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/core.py", line 291, in connect
    comm = await asyncio.wait_for(
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
    return fut.result()
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 511, in connect
    convert_stream_closed_error(self, e)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <distributed.comm.tcp.TCPConnector object at 0x2aab69acd990>: ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/utils.py", line 742, in wrapper
    return await func(*args, **kwargs)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/client.py", line 1298, in _reconnect
    await self._ensure_connected(timeout=timeout)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/client.py", line 1328, in _ensure_connected
    comm = await connect(
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/core.py", line 315, in connect
    await asyncio.sleep(backoff)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/asyncio/tasks.py", line 605, in sleep
    return await future
asyncio.exceptions.CancelledError

Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nbytes = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/client.py", line 1500, in _handle_report
    msgs = await self.scheduler_comm.comm.read()
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 144, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) Client->Scheduler local=tcp://172.16.3.90:55305 remote=tcp://172.16.3.167:43338>: Stream is closed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/utils.py", line 742, in wrapper
    return await func(*args, **kwargs)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/client.py", line 1508, in _handle_report
    await self._reconnect()
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/utils.py", line 742, in wrapper
    return await func(*args, **kwargs)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/client.py", line 1298, in _reconnect
    await self._ensure_connected(timeout=timeout)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/client.py", line 1328, in _ensure_connected
    comm = await connect(
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/site-packages/distributed/comm/core.py", line 315, in connect
    await asyncio.sleep(backoff)
  File "/vortexfs1/home/anthony.meza/.conda/envs/notebook_env/lib/python3.10/asyncio/tasks.py", line 605, in sleep
    return await future
asyncio.exceptions.CancelledError
2023-04-17 10:59:11,611 - distributed.nanny - INFO - Worker closed
2023-04-17 10:59:13,614 - distributed.nanny - ERROR - Worker process died unexpectedly
2023-04-17 10:59:17,708 - distributed.nanny - INFO - Closing Nanny at 'tcp://172.16.3.90:43355'. Reason: nanny-close-gracefully
2023-04-17 10:59:17,708 - distributed.dask_worker - INFO - End worker
